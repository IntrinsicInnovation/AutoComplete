@using Microsoft.AspNetCore.Mvc.Rendering
@using Kendo.Mvc


@{
    ViewData["Title"] = "Home Page";
}


@model AutoCompleteViewModel
<div class="text-center">
    <p>Sample AutoComplete project with Virtualization implemented.  See <a href="http://intrinsicinnovation.com/articles"> intrinsicinnovation.com/articles/</a> for more articles and samples.</p>
    </div>



<script type="text/javascript">

    function onAdditionalData() {
        return {
            text: $("#UserName").val()
        };
    }



    function onRegistrationIdSelect(e) {
        var dataItem = this.dataItem(e.item.index());
        alert("Call function on autocomplete Select item here!");
    }




</script>


<div class="dialog-content container-fluid">
        <div class="row">
            <div class="small-4 large-4 columns ">
                <label asp-for="UserName" class="required middle">UserName:&nbsp;</label>
            </div>
            <div class="small-8 large-8 columns noleftpadding">
                @(Html.Kendo().AutoCompleteFor(m => m.UserName)
                                        .DataTextField("UserName")
                                        .Events(e =>
                                        {
                                            e.Select("onRegistrationIdSelect");
                                        })
                                        .Filter("contains")
                                        .HtmlAttributes(new { style="width:100%"})
                                        .MinLength(3)
                                        .DataSource(source =>
                                        {
                                            source.Custom()
                                                .ServerFiltering(true)
                                                .ServerPaging(true)
                                                .PageSize(80)
                                                .Type("aspnetmvc-ajax")
                                                .Transport(transport =>
                                                {
                                                    transport.Read(r => r.Action("GetUsers", "Home").Data("onAdditionalData").Type(HttpVerbs.Get));
                                                })
                                                .Schema(schema =>
                                                {
                                                    schema.Data("Data") //define the [data](http://docs.telerik.com/kendo-ui/api/javascript/data/datasource#configuration-schema.data) option
                                                    .Total("Total"); //define the [total](http://docs.telerik.com/kendo-ui/api/javascript/data/datasource#configuration-schema.total) option
                                                });
                                        })
                                        .Virtual(v => v.ItemHeight(26))
                )
            </div>
        </div>
    </div>
